# My personal settings that are only applied to projects under a directory where this file is
# placed (maybe via symlink) if desired.  This is intended only for my own projects where this
# doesn't need to worry about what others' projects have.
#
# This is merged with ~/.config/clangd/config.yaml (if present there) which has greater
# precedence, and so this can only add to that.
#
# This enables a ton of warnings that most codebases will trigger some of.  This file serves more
# as a reference and initial template to copy to a project and adjust (usually remove warnings to
# be less strict) for that project.

Diagnostics:
  UnusedIncludes: Strict

# TODO: Would this avoid the `std::bad_alloc` bug in `clangd` versions 16 & 17 in OpenIndiana
# (which seemed to happen when it tried to index the standard library)?
#
#Index:
#  StandardLibrary: No

CompileFlags:
  Remove: [
  ]
  Add: [
    -O3,  # Needed for complete diagnostics.
    -Wall, -Wextra, -Wconversion, -Wpedantic,
    -Werror=implicit-function-declaration,
    -Werror=incompatible-pointer-types,
   #-Wno-error=unknown-warning-option,
    -Wbad-function-cast, -Wcast-function-type, -Wcast-qual, -Wcast-align,
    -Wswitch-enum, -Wcovered-switch-default,
    -Wconditional-uninitialized, -Wstrict-overflow=5,
    -Wloop-analysis,
    -Wpointer-arith, -Wnullable-to-nonnull-conversion,
    -Wwrite-strings,
    -Winit-self,
    -Wshift-overflow, -Wshift-sign-overflow,
    -Wformat=2, -Wformat-non-iso, -Wformat-signedness, -Wformat-type-confusion, -Wno-format-pedantic,
    -Wshadow,
    -Wassign-enum, -Wduplicate-enum,
    -Wfloat-equal,
    -Watomic-implicit-seq-cst,
    -Wover-aligned,
    -Wused-but-marked-unused,
    -Wundef,
   #-Wpacked, -Wpadded, # -Wno-error=padded,
    -Walloca,
    -Wunreachable-code-aggressive,
    -Wredundant-decls, -Wredundant-parens, -Wextra-semi-stmt, -Wextra-semi,
    -Wstrict-prototypes, -Wold-style-definition, -Wmissing-prototypes, -Wmissing-declarations,
    -Wtype-limits, -Wtautological-constant-in-range-compare,
    -Wunused-macros,
   #-Wdeprecated,
    -Wgcc-compat,
    -Wno-language-extension-token, -Wno-variadic-macros,
    -Wno-gnu,
    -Wno-empty-translation-unit,  # Avoid clangd's spurious generation of this.

    # Sometimes helpful with some codebases:
   #-Wno-conversion,  # Only needed to actually no-error sign-conversion.
   #-Wno-sign-conversion,
   #-Wno-cast-qual,
   #-Wno-incompatible-pointer-types-discards-qualifiers,
   #-Wno-extra-semi-stmt,

    -pedantic-errors,
    -Wno-error=unknown-warning-option,
    -Warray-bounds-pointer-arithmetic,
    -Wcomma,
    -Wcompound-token-split,
    -Wdeprecated,
    -Wdisabled-macro-expansion,
    -Widiomatic-parentheses,
   #-Wimplicit-fallthrough, -Wmissing-noreturn,  # Requires more-modern C standard.
    -Wmissing-include-dirs, -Wnonportable-system-include-path,
    -Wnewline-eof,
    -Wpacked, # -Wpadded, -Wno-error=padded,
    -Wsigned-enum-bitfield,
   #-Wzero-as-null-pointer-constant,  # C++ only, IIUC.
  ]
