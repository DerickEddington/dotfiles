# This file is intended to be manually source'd when desired and when the
# debugee was built by LLVM for code-coverage analysis (i.e. with
# `-fprofile-instr-generate -fcoverage-mapping`) , and so this is relevant to
# binaries built by Clang or Rust.
#
# Note that this should only be source'd after the __llvm_profile_* symbols have
# been properly located for the current debugee.  E.g. after the debugee has
# been start'ed.

# Calling this will cause binaries that were instrumented for profiling to dump
# the current profiling counters, of the current run of the program, to the
# profile-file location as configured via LLVM's build-time command-line option
# (e.g. -fprofile-instr-generate=$NAME.%p.profraw) or run-time
# environment-variable (e.g. LLVM_PROFILE_FILE=$NAME.%p.profraw).
#
# Intended to be used like `p $myCovWrite()` before program exit while
# interactively debugging and while possibly altering program flow manually
# (e.g. injecting changes to variables, injecting calls, etc.).
#
# Note that using this will cause artificially multiplied counter values, unless
# the profile file is manually deleted before each use and before program exit.
# This is because this function appends profile data when the profile file
# already exists, and because this function is automatically called again
# atexit.
set var $myCovWrite = (int (*)(void)) __llvm_profile_write_file

# Calling this will reset all the profiling counters, of the current run of the
# program, to zero, which can be useful for rare purposes.
set var $myCovReset = (void (*)(void)) __llvm_profile_reset_counters
